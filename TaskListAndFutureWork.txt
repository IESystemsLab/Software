----------
General
----------
- The helper function 'HELPER_DistribParamsFromMeanAndVar.m' inverts mean & variance to distribution-specific parameters.  However, it needs support a for a larger set of distributions, and not just continuous-valued distributions but also discrete-valued distributions too.

- Tim identified a good way to improve the SimWrapper_ functions (which enable a Simulink model to be called like a MATLAB function), but there's no time to make this change before the initial upload.  The idea is to add flexibility so that they can be used like a front-end script OR a back-end function.  Do this by adding an editor cell of default parameters, change the function signature to varargin & varargout, and then add logic to detect if being called like a function (e.g. if varargin is non-empty) and to override the default parameters if true.  Even better than varargin(1), varargin(2), ... would a structure of key-value pairs, so that parameters can be matched using semantics rather than ordinal.

- Whether workstation models or inventory models, everything concerns a single-product system.  Add tools for multi-product systems.

- One idea to help this grow:  For a final project in graduate-level classes, require a meaningful contribution to the open-source project (a new analytical approximation, a new simulation model, a new demo, ...)



----------
Inventory Models
----------

- In the Base Stock and QR inventory simulation models, better ideas are needed for collection and visualization of backorder data; right now what's there is a bit of a hack.

- For the EOQ, Base Stock, and QR inventory simulation models, use regression to fit a multi-dimensional surface approximation (sometimes called a "metamodel").
-- Each system has a variety of things which can change (demand mean, scv, distrib type, cost parameters ...); make these the inputs.
-- Each system has a variety of things which can be measured (costs, fill rate, inventory level ...); make these the outputs.
-- If using multiple linear regression, then multiple outputs requires fitting multiple regression models, one per output.



----------
Single Workstation Models
----------

- ALWAYS USE SCV, not variance.  This requires writing analogs of the MM1, MMk, GG1, GGk closed-form QTheory approx functions which input mean & SCV, not mean & variance.

- The big three performance measures are Work-In-Process, Cycle Time, and Throughput.  Most work so far concerns their _averages_.  There should be many interesting results concerning their overshoot, oscillation, convergence, and many other functions of these random variables.

- The MM1, MMk, GG1, GGk analytical approximation functions are vectorized in either (1) arrival & processing time means & variances, or (2) number-of-servers K.  However, the functions are not simultaneously vectorized in both sets of parameters, e.g. either one set or the other must be scalars.  Is vectorization in both sets of parameters possible?

- Hopp & Spearman in section 9.4.2 (ed. 2) derive analytical formulas for cycle time of a single workstation with process batching.  (both parallel batch processing, and serial batch processing with a setup between each batch)  Implement these analytical formulas in MATLAB functions, to enable comparing simulation and analytical-approximation results.



----------
Production Line Models
----------

- Implement analytical formulas in Hopp & Spearman (ch. 7, ed. 2) for best-case, worst-case, and practical worst-case performance of a production line.  The create experiements to test best-case, worst-case, and practical worst-case analytical results with simulation results.

- Hopp & Spearman include equations 8.10-8.11 (ed. 2) to characterize the variability of a single workstation's departure process.  This enables using queueing theory approximations to analyze multiple workstations in series, because the departure process from one workstation is the arrival process to the next.  However, they provide no analytical results for forking and branches - what if one workstation's departure process is divided between two downstream workstations?  Analytical results which might be helpful concern thinning a Poisson process.  Implement these analytical results, and also simulation models and demos to compare the analytical results with simulation.



----------
Push Vs. Pull Dispatch Control
----------

- Implement analytical formulas in Hopp & Spearman (ch. 10, ed. 2) for analysis of CONWIP lines using mean-value analysis.  Then create experiments to test analytical results with simulation results.

- Tim observed that a true comparison of push versus pull would initialize the same blocks in side-by-side simulation models with the same random number seeds, e.g. use common random numbers.  However, the simulation models aren't configured for that - both the SimWrapper functions and the GGk library blocks' initialization functions include calls to se_randomizeseeds(gcs, 'Mode', 'All').  If a desired experiment requires comparisons with common random numbers, then create these alternate versions of the GGk library blocks and/or SimWrapper functions.

- Advanced:  For a single-product production line, the only order-release control choice concerns when.  For multi-product lines, additional control choices concern what or in what sequence.  Develop simulation models to experiment with the multi-product case.

- Advanced:  Create a simulation model with logic to *dynamically* adjust the CONWIP level, perhaps in response to the number of backordered demands or some forecast of anticipated demand?